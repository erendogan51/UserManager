openapi: 3.0.3
info:
  title: User Manager
  description: Project for Advanced Software Development
  version: 1.0.1
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: User
    description: Operations about user
paths:
  /user:
    post:
      tags:
        - User
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '200':
          description: Create user success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '409':
          description: username taken
  /auth/login:
    post:
      tags:
        - User
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Login user success
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Invalid username/password supplied
          content:
            text/plain:
              schema:
                type: string
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /auth/logout:
    post:
      tags:
        - User
      security:
        - bearerAuth: [ ]
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters:
        - name: username
          in: query
          description: The username of the user to logout
          required: true
          schema:
            type: string
      responses:
        '200':
          description: logged out success
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /user/{username}:
    get:
      tags:
        - User
      security:
        - bearerAuth: [ ]
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get user success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      tags:
        - User
      security:
        - bearerAuth: [ ]
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Delete user success
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /user/{username}/password:
    put:
      tags:
        - User
      security:
        - bearerAuth: [ ]
      summary: Change user password
      description: When logged in you can change your password
      operationId: updatePassword
      parameters:
        - name: username
          in: path
          description: The username of the user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
      responses:
        '200':
          description: Change password success
          content:
            text/plain:
              schema:
                type: string
        default:
          description: error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Response'
components:
  schemas:
    CreateUser:
      type: object
      properties:
        username:
          type: string
          example: theUser
          nullable: false
        firstName:
          type: string
          example: John
          nullable: false
        lastName:
          type: string
          example: James
        password:
          type: string
          example: '12345'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        password:
          type: string
          example: '12345'
    Response:
      type: object
      properties:
        message:
          type: string
    NewPassword:
      type: object
      properties:
        new_password:
          type: string
        new_password_confirmation:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
